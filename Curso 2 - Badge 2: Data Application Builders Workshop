select current_region();
select current_account();
-----------------------------------------------------

select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from

(SELECT 
 'DORA_IS_WORKING' as step
 ,(select 223 ) as actual
 ,223 as expected
 ,'Dora is working!' as description
); 

select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW01' as step
 ,(select count(*) from PC_RIVERY_DB.INFORMATION_SCHEMA.SCHEMATA where schema_name ='PUBLIC') as actual
 ,1 as expected
 ,'Rivery is set up' as description
);
-----------------------------------------------------
SELECT * FROM PC_RIVERY_DB.PUBLIC.HEALTHY_FOOD_INTEREST_FORM_RESULT_

-----------------------------------------------------
select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW02' as step
 ,(select count(*) from PC_RIVERY_DB.INFORMATION_SCHEMA.TABLES where ((table_name ilike '%FORM%') and (table_name ilike '%RESULT%'))) as actual
 ,1 as expected
 ,'Rivery form results table is set up' as description
);
-----------------------------------------------------
/* https://fdc.nal.usda.gov/api-key-signup.html
FoodData Central Get An API Key
Your API key for pablo.fabbiano@gmail.com is: SfQKrQpTXiGEcuFW2ms6IiCcRu5X8raHdel6n5GQ
You can start using this key to make web service requests. Simply pass your key in the URL when making a web request. Here's an example:
https://api.nal.usda.gov/fdc/v1/foods/search?query=apple&pageSize=2&api_key=SfQKrQpTXiGEcuFW2ms6IiCcRu5X8raHdel6n5GQ
*/

-----------------------------------------------------
-- fruityvice
SELECT * FROM "PC_RIVERY_DB"."PUBLIC"."FRUITYVICE";

select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW03' as step
 ,(select sum(round(nutritions_sugar)) from PC_RIVERY_DB.PUBLIC.FRUITYVICE) as actual
 ,35 as expected
 ,'Fruityvice table is perfectly loaded' as description
);

-----------------------------------------------------
select * from "PC_RIVERY_DB"."PUBLIC"."FDC_FOOD_INGEST";

select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW04' as step
 ,(select count(*) from pc_rivery_db.public.fdc_food_ingest
   where lowercasedescription like '%cheddar%') as actual
 ,50 as expected
 ,'FDC_FOOD_INGEST Cheddar 50' as description
);

truncate table "PC_RIVERY_DB"."PUBLIC"."FDC_FOOD_INGEST";
-----------------------------------------------------
select count(*) from "PC_RIVERY_DB"."PUBLIC"."FDC_FOOD_INGEST";
-----------------------------------------------------
create table "PC_RIVERY_DB"."PUBLIC"."FRUIT_LOAD_LIST"
   (fruit_name VARCHAR (25));
   
insert into pc_rivery_db.public.fruit_load_list
values 
('banana')
,('cherry')
,('strawberry')
,('pineapple')
,('apple')
,('mango')
,('coconut')
,('plum')
,('avocado')
,('starfruit');

select * from pc_rivery_db.public.fruit_load_list;

select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW05' as step
 ,(select count(*) from pc_rivery_db.public.fdc_food_ingest) as actual
 ,927 as expected
 ,'All the fruits!' as description
);
-----------------------------------------------------
show stages in account;
-- I can use the classic console to create a new stage or this SQL command
create stage demo_db.public.my_internal_named_stage;

-----------------------------------------------------
USE DATABASE demo_db;
list @my_internal_named_stage;

select $1 from @my_internal_named_stage/my_file.txt.gz;
-----------------------------------------------------
select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
 SELECT 
 'DABW06' as step
 ,(select count(*) from @demo_db.public.my_internal_named_stage) as actual
 ,3 as expected
 ,'PUT files' as description
);
-----------------------------------------------------
USE DATABASE pc_rivery_db;
insert into fruit_load_list values ('test');
select * from fruit_load_list;
delete from fruit_load_list where fruit_name = 'from streamlit' or fruit_name like 'test' or fruit_name like 'papaya';
 
-----------------------------------------------------
select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from
(
SELECT 'DABW07' as step ,(select count(*) from pc_rivery_db.public.fruit_load_list where fruit_name in ('jackfruit','papaya', 'kiwi', 'test', 'from streamlit', 'guava')) as actual ,4 as expected ,'Followed challenge lab directions' as description
); 



select count(*) from pc_rivery_db.public.fruit_load_list where fruit_name in ('jackfruit','papaya', 'kiwi', 'test', 'from streamlit', 'guava');

select * from pc_rivery_db.public.fruit_load_list ;

insert into pc_rivery_db.public.fruit_load_list values ('guava');
-----------------------------------------------------
select demo_db.public.grader(step, (actual = expected), actual, expected, description) as graded_results from

(
SELECT 'DABW07' as step ,(select count(*) from pc_rivery_db.public.fruit_load_list where fruit_name in ('jackfruit','papaya', 'kiwi', 'test', 'from streamlit', 'guava')) as actual ,4 as expected ,'Followed challenge lab directions' as description
); 

